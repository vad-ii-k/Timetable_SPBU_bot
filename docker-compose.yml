version: '3.9'

services:

  timetable-tgbot:
    image: ${BOT_IMAGE_NAME:-tg_bot-image}
    container_name: ${BOT_CONTAINER_NAME:-tg_bot-container}
    working_dir: /usr/src/app/${BOT_NAME:-tg_bot}
    build:
      context: .
      dockerfile: ./dockerfile
    environment:
      TZ: Europe/Moscow
      ADMINS: ${ADMINS}
      BOT_TOKEN: ${BOT_TOKEN}

      PROXY_LOGIN: ${PROXY_LOGIN}
      PROXY_PASSWORD: ${PROXY_PASSWORD}
      PROXY_IPS: ${PROXY_IPS}

      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}

      PG_NAME: ${DB_NAME}
      PG_USER: ${DB_USER}
      PG_HOST: ${DB_HOST}
      PG_PASSWORD: ${DB_PASS}
      PG_PORT: ${DB_PORT}
      ARE_GROUPS_COLLECTED: ${ARE_GROUPS_COLLECTED}
    volumes:
        - .:/usr/src/app/${BOT_NAME:-tg_bot}
    depends_on:
      - timetable-postgres
      - timetable-redis
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        python -m alembic upgrade head
        poetry run pybabel compile -d tgbot/locales -D messages
        sass --update data/styles:data/compiled_html_pages/styles
        poetry run python bot.py
    network_mode: host
    restart: unless-stopped

  timetable-redis:
    image: redis:alpine
    command: >
      --requirepass ${REDIS_PASSWORD}
    environment:
      TZ: Europe/Moscow
    volumes:
        - /usr/src/app/${BOT_NAME:-tg_bot}/redis/config:/usr/local/etc/redis
        - /usr/src/app/${BOT_NAME:-tg_bot}/redis/data:/data
    network_mode: host    
    restart: unless-stopped

  timetable-postgres:
    image: postgres:14-alpine
    environment:
      TZ: Europe/Moscow
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - /usr/src/app/${BOT_NAME:-tg_bot}/postgres/init:/docker-entrypoint-initdb.d
      - /usr/src/app/${BOT_NAME:-tg_bot}/postgres/data:/var/lib/postgresql/data
    network_mode: host
    restart: unless-stopped
