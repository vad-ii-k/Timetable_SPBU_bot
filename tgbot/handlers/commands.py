import logging

from aiogram import Router, Bot
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, BotCommand, BotCommandScopeAllPrivateChats
from aiogram.utils.i18n import gettext as _

from tgbot.config import bot
from tgbot.keyboards.inline import create_start_choice_keyboard, create_settings_keyboard
from tgbot.misc.states import SearchEducator, SearchGroup
from tgbot.services.db_api.db_commands import database

router = Router()


async def set_commands(_bot: Bot):
    data = [
        (
            [
                BotCommand(command="start", description="üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
                BotCommand(command="my_schedule", description="üìÜ –ü–æ–ª—É—á–∏—Ç—å —Å–≤–æ—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"),
                BotCommand(command="settings", description="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"),
                BotCommand(command="help", description="üìí –í—ã–≤–µ—Å—Ç–∏ —Å–ø—Ä–∞–≤–∫—É –æ –∫–æ–º–∞–Ω–¥–∞—Ö"),
                BotCommand(command="educator", description="üßë‚Äçüè´Ô∏è –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è"),
                BotCommand(command="group", description="üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã"),
            ],
            BotCommandScopeAllPrivateChats(),
            None
        )
    ]
    for commands_list, commands_scope, language in data:
        await bot.set_my_commands(commands=commands_list, scope=commands_scope, language_code=language)


@router.message(commands=["start"], state="*")
async def start_command(message: Message, state: FSMContext):
    await state.clear()
    logging.info("start -- id:%s", message.from_user.id)
    await message.answer(
        text=_("üëãüèª <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {name}!</b>\n"
               "‚ÑπÔ∏è –°–ª–µ–¥—É–π—Ç–µ —É–∫–∞–∑–∞–Ω–∏—è–º –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n"
               "‚ùï –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–π—Ç–µ —Ç–æ–ª—å–∫–æ —Å –ø–æ—Å–ª–µ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –±–æ—Ç–∞\n"
               "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
               "‚¨áÔ∏è –ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ:").format(name=message.from_user.full_name),
        reply_markup=await create_start_choice_keyboard(),
    )


@router.message(commands=["educator"], state="*")
async def educator_search_command(message: Message, state: FSMContext):
    await message.answer(_("üîé –í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–æ–∏—Å–∫–∞:"))
    await state.set_state(SearchEducator.getting_choice)


@router.message(commands=["group"], state="*")
async def group_search_command(message: Message, state: FSMContext):
    await message.answer(_("üîé –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –¥–ª—è –ø–æ–∏—Å–∫–∞:\n"
                           "*Ô∏è‚É£ <i>–Ω–∞–ø—Ä–∏–º–µ—Ä, 20.–ë08-–º–º</i>"))
    await state.set_state(SearchGroup.getting_choice)


@router.message(commands=["settings"], state="*")
async def settings_command(message: Message):
    user = await database.get_user(tg_user_id=message.chat.id)
    settings = await database.get_settings(user)

    text = _("üìÖ –û—Å–Ω–æ–≤–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:\n ‚Äî ")
    # –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    text += _("\n\n‚öôÔ∏è –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
    await message.answer(text=text, reply_markup=await create_settings_keyboard(settings))


@router.message(commands=["help"])
async def bot_help_command(message: Message):
    answer = _("ü§ñ –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: \n")
    commands = await bot.get_my_commands()
    for cmd in commands:
        answer += f"/{cmd.command} ‚Äî {cmd.description}\n"
    await message.answer(answer)
