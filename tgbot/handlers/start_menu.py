from aiogram import Router
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery
from magic_filter import F

from tgbot.cb_data import StartMenuCallbackFactory
from tgbot.handlers.helpers import change_message_to_progress
from tgbot.keyboards.inline import create_study_divisions_keyboard
from tgbot.misc.states import SearchEducator, SearchGroup
from tgbot.services.timetable_api.timetable_api import get_study_divisions

router = Router()


@router.callback_query(StartMenuCallbackFactory.filter(F.type == "student_search"))
async def group_search_callback(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_text("üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã:\n *Ô∏è‚É£ <i>–Ω–∞–ø—Ä–∏–º–µ—Ä, 20.–ë08-–º–º</i>")
    await state.set_state(SearchGroup.getting_choice)


@router.callback_query(StartMenuCallbackFactory.filter(F.type == "student_navigation"))
async def student_navigation_callback(callback: CallbackQuery):
    await change_message_to_progress(callback.message)
    study_divisions = await get_study_divisions()
    await callback.message.edit_text(
        text=f"‚¨áÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: ",
        reply_markup=await create_study_divisions_keyboard(study_divisions)
    )
    await callback.answer(cache_time=2)


@router.callback_query(StartMenuCallbackFactory.filter(F.type == "educator_search"))
async def educator_search_callback(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_text("üßë‚Äçüè´ –í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è:")
    await state.set_state(SearchEducator.getting_choice)
